{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Clinical Proteomics","text":"<p>Updated: 2023-20-04</p> <p>Discover the world of proteomics with the Clinical Proteomics module of the Sandbox, offering the Proteomics Sandbox app on UCloud - an accessible resource for biomedical students and non-computational researchers. With a user-friendly interface and a lightweight clone feature, the app is perfect for those without extensive coding knowledge, providing a stable platform for proteomics software tools. You can also learn to predict protein structures based on sequence data with the independent ColabFold workshop, available on UCloud. This hands-on experience offers insights into the exciting field of proteomics analysis and is accessible for all UCloud-users.  </p> <p>New course materials are being developed constantly to enhance your education and training in clinical proteomics data analysis. Stay tuned!</p> <p>Disclaimer</p> <p>Currently, the educational material on proteomics is only available at UCloud, making it only accessible for UCloud-users.</p> <p></p> Authors <p>Jacob Fredegaard Hansen</p> <p>Data Scientist  :custom-orcid: </p> <p>Requirements</p> <ul> <li>Access to UCloud and sufficient resources to run the application</li> <li>Basic computational knowledge, including familiarity with the UCloud environment</li> <li>Familiarity with proteomics analysis techniques</li> </ul>"},{"location":"index.html#clinical-proteomics","title":"Clinical Proteomics","text":""},{"location":"index.html#learning-clinical-proteomics-with-the-sandbox","title":"Learning Clinical Proteomics with the Sandbox","text":"<p>The Clinical Proteomics Module offers a comprehensive resource for learning and practicing clinical proteomics data analysis. The module consists of the following components:</p> <ul> <li>The Proteomics Sandbox app, which is a virtual machine with software readily available for clinical proteomics data analysis.  </li> <li>ColabFold workshop, which is an independent teaching material for learning to predict protein structures from sequence data based on AlphaFold.  </li> </ul> <p>In the future, additional course materials will be made available to provide comprehensive teaching and education in clinical proteomics. With the Clinical Proteomics Module, students and researchers have the opportunity to work with real-world clinical data, gain practical experience in analyzing and interpreting such data, and enhance their knowledge and skills in clinical proteomics data analysis.</p> <p>Explore the various sections of the proteomics module by clicking on the tabs above.</p>"},{"location":"colabfold.html","title":"ColabFold","text":""},{"location":"colabfold.html#colabfold","title":"ColabFold","text":"<p>Section Overview</p> <p>\ud83d\udd70 Time Estimation: 4 hours</p> <p>\ud83d\udcac Learning Objectives:      1. Explain the process of predicting protein structures based on amino acid sequences using the ColabFold web application.     2. Utilize the ColabFold web application within the UCloud environment to perform complex computational tasks with optimal performance.     3. Understand the metrics used by AlphaFold2 to predict protein structure models and how they relate to the confidence and accuracy of the predictions.  </p>"},{"location":"colabfold.html#introduction","title":"Introduction","text":"<p>ColabFold is a web application that allows users to predict protein structures from sequence data. The application is based on the AlphaFold2 algorithm, which is a deep learning model that predicts protein structures from sequence data. The ColabFold application is a simplified version of the AlphaFold2 algorithm, which is designed to be used by non-computational researchers. The ColabFold application is available on the Clinical Proteomics Sandbox website and can be accessed at UCloud. </p>"},{"location":"colabfold.html#getting-started","title":"Getting Started","text":"<p>As a non-computational user, you can access ColabFold through UCloud. This integration allows you to use the tool, but before beginning the ColabFold workshop, you need to download the workshop as a Jupyter Notebook from GitHub and upload it to your designated folder on UCloud. To initiate this process, please follow the steps below:</p> <p> Log in to UCloud.  Choose a workspace that has GPU resources for optimal performance.  Search for ColabFold in the Apps section.  Choose the appropriate machine type and select a GPU, such as u2-gpu-1. The use of a single GPU is generally sufficient, though larger sequences may require additional computational power.  Select a personal folder to use, ensuring that you have uploaded the Jupyter Notebook from GitHub beforehand.  Click on \"Submit\" and then \"Open interface\" on the following page.  Proceed with the ColabFold workshop, which will guide you through the process of predicting protein structures based on amino acid sequences.  </p>"},{"location":"colabfold.html#efficient-super-computing-with-colabfold","title":"Efficient Super-Computing with ColabFold","text":"<p>Advantages of using ColabFold at UCloud</p> <ol> <li>ColabFold at UCloud provides access to super-computing power, enabling users to perform complex computational tasks quickly and efficiently.  </li> <li>The user-friendly interface of ColabFold and UCloud's interactive HPC-environment make it easy for non-computational users to access and utilize the tool.  </li> <li>Using ColabFold at UCloud can be a cost-effective solution for those who require access to super-computing power, as it eliminates the need for expensive hardware or software investments and offers a pay-per-use basis instead.</li> </ol>"},{"location":"contributors.html","title":"Contributors","text":"<p>The Proteomics Sandbox application has been developed with contributions from:</p> <p>Jacob Fredegaard Hansen :custom-orcid:   Ole N\u00f8rregaard Jensen :custom-orcid:   Veit Stefan Schw\u00e4mmle :custom-orcid: </p>","tags":["authors","contributors"]},{"location":"coursematerials.html","title":"Course Materials","text":""},{"location":"coursematerials.html#course-materials","title":"Course Materials","text":"<p>This page provides access to course materials on proteomics. Please note that the page is currently under development, and more detailed course materials will be added in the future. </p>"},{"location":"coursematerials.html#enhance-your-proteomics-knowledge","title":"Enhance Your Proteomics Knowledge","text":"<p>Are you interested in delving deeper into the fascinating field of proteomics? Whether you are pursuing a BSc, MSc or PhD degree, you can expand your knowledge and skills in proteomics by taking advantage of the various courses available. These courses cover both experimental and computational approaches, offering a comprehensive understanding of the field.  </p> <p>Available Proteomics Courses</p> <p>If you are keen on delving deeper into proteomics, either through experimental or computational approaches, take a look at the following courses available at SDU: - BMB535: Experimental Proteomics - Characterization of cellular signaling using quantitative proteomics - BMB834: Protein structure, dynamics and modelling - BMB831: Biostatistics in R II - BMB210: Advanced methods in protein mass spectrometry and proteomics </p>"},{"location":"coursematerials.html#ready-to-use-course-materials","title":"Ready-to-use course materials","text":"<p>Get started on your proteomics journey today with these exciting course offerings! The course materials listed below offer in-depth descriptions and all the necessary resources you need to succeed:  </p> <ul> <li>Access the powerful workshop in ColabFold on GitHub.  </li> <li>Find comprehensive materials for Quantitative Proteomics also on GitHub.  </li> </ul>"},{"location":"coursematerials.html#future-course-materials-on-proteomics","title":"Future course materials on proteomics","text":"<p>Clinical proteomics data analysis course materials are currently being developed and will be accessible on the Clinical Proteomics Sandbox website in the future.</p>"},{"location":"gettingstarted.html","title":"Getting Started","text":""},{"location":"gettingstarted.html#getting-started","title":"Getting Started","text":"<p>Section Overview</p> <p>\ud83d\udd70 Time Estimation: 10 minutes</p> <p>\ud83d\udcac Learning Objectives:      1. Launch the Proteomics Sandbox App and become proficient in using it for proteomics data analysis.     2. Familiarize oneself with the software tools available within the app, such as FragPipe, MaxQuant, PDV, SearchGUI, and PeptideShaker.     3. Develop skills in utilizing the Proteomics Sandbox App's lightweight clone feature, in order to reduce storage requirements while analyzing large datasets.  </p>"},{"location":"gettingstarted.html#introduction","title":"Introduction","text":"<p>The  Proteomics Sandbox App is an excellent resource for biomedical students and non-computational researchers to learn and apply clinical proteomics. It provides a stable platform for proteomics software tools and offers a user-friendly interface. It is easy to use and does not require extensive coding knowledge. Furthermore, the app's lightweight clone feature optimizes storage requirements when working with datasets.</p>"},{"location":"gettingstarted.html#software","title":"Software","text":"<p>The software available in the Proteomics Sandbox includes FragPipe, MaxQuant, PDV, SearchGUI, ThermoRawFileParser, and PeptideShaker. These software tools provide automated peptide and protein identification and quantification, comprehensive proteomics data analysis, visualization tools for spectral matches, a user-friendly interface for performing peptide searches, and a tool for visualizing and analyzing peptide search results. An overview table with a short description of each software tool is listed below for reference.</p> Software Description FragPipe Automated peptide and protein identification and quantification using the MSFragger search engine. Supports the identification of arbitrary PTMs. Includes additional tools for post-processing and visualization of search results. MaxQuant Comprehensive software suite for proteomics data analysis. Includes protein and peptide identification, quantification, and visualization of spectral matches. Features an advanced search engine and a user-friendly graphical interface. PDV Visualization tool for spectral matches, particularly those obtained from MSFragger searches. Allows users to inspect and evaluate the quality of the matches. Supports annotation and customization of plots. SearchGUI User-friendly interface for performing peptide searches using multiple search engines (e.g., MSFragger, X!Tandem, OMSSA). Supports a wide range of search options and post-processing features. ThermoRawFileParser A tool for converting Thermo Scientific RAW files to an open format mzML file that can be read by other proteomics software. Includes options for filtering, peak picking, and data conversion. PeptideShaker Tool for visualizing and analyzing the results of peptide searches performed with SearchGUI. Includes features for filtering, annotation, and visualization of results. Supports integration with other proteomics databases and software."},{"location":"gettingstarted.html#efficient-and-user-friendly-proteomics-software-access","title":"Efficient and User-Friendly Proteomics Software Access","text":"<p>Advantages of using the Proteomics Sandbox App</p> <ol> <li>Access to stable proteomics software tools.</li> <li>User-friendly interface that does not require extensive coding knowledge.</li> <li>Lightweight clone feature that optimizes storage requirements when working with datasets.</li> </ol> <p>Overall, the Clinical Proteomics Sandbox is an excellent resource for biomedical students and non-computational researchers seeking to expand their knowledge and skills in clinical proteomics.</p>"},{"location":"gettingstarted.html#future-plans","title":"Future Plans","text":"<p>The Clinical Proteomics Sandbox is constantly evolving to provide an accessible platform for learning and practicing clinical proteomics data analysis. In the future, the sandbox will expand its content to include new modules such as:</p> <ul> <li>Protein quantification and analysis of post-translational modifications, which will provide an even more comprehensive resource for those interested in clinical proteomics.</li> <li>Introducing mass-spectrometry imaging (MSi) for clinical specimen. Data for MS imaging is available and public clinical datasets could also be included.</li> <li>Generate course material based on clinical proteomics data using FragPipe.</li> <li>Investigate protein complexes.</li> </ul> <p>In addition, the sandbox aims to:</p> <ul> <li>Make clinical proteomics data available for education and training purposes, offering students and researchers the opportunity to work with real-world clinical data and gain practical experience in analyzing and interpreting such data.</li> <li>Move into statistical and functional analysis of quantitative proteomics data and meta-analysis of clinical proteomics data.</li> </ul> <p>As the sandbox continues to evolve, it will offer an invaluable resource for those seeking to enhance their knowledge and skills in clinical proteomics data analysis.</p>"},{"location":"gettingstarted.html#in-short","title":"In Short","text":"<p>The Clinical Proteomics Sandbox App provides a stable platform for proteomics software tools and a user-friendly interface for non-computational researchers and biomedical students to learn and apply clinical proteomics. The app's lightweight clone feature optimizes storage requirements when working with datasets. Software tools available include FragPipe, MaxQuant, PDV, SearchGUI, ThermoRawFileParser, and PeptideShaker. The Sandbox will expand its content in the future, including modules for protein quantification and analysis of post-translational modifications, and will make clinical proteomics data available for education and training purposes.</p>"},{"location":"keywords.html","title":"Keywords","text":"<p>Here's a lit of used keywords:</p>"},{"location":"keywords.html#authors","title":"authors","text":"<ul> <li>Contributors</li> </ul>"},{"location":"keywords.html#contributors","title":"contributors","text":"<ul> <li>Contributors</li> </ul>"},{"location":"setup.html","title":"Setup","text":""},{"location":"setup.html#setup","title":"Setup","text":"<p>Section Overview</p> <p>\ud83d\udd70 Total Time Estimation: 10 minutes</p> <p>\ud83d\udcac Learning Objectives:      1. Launch the Proteomics Sandbox App and become proficient in using it for proteomics data analysis.     2. Deploy your own data in the Proteomics Sandbox app.   </p>"},{"location":"setup.html#launch-the-proteomics-sandbox-application-in-ucloud","title":"Launch the Proteomics Sandbox application in UCloud","text":"<p>Below are step-by-step instructions on how to launch the Proteomics Sandbox application in UCloud.  </p> <p> Navigate to the workspace where your data is located.  Access the application menu by clicking on Apps in the left-hand side menu.  Search for Proteomics Sandbox and click on the icon for the application.  Select your desired number of resources under Machine type. Remember, larger datasets will require more resources.  Deploy your data by selecting Folder and adjusting the path to your files. Be sure to select the correct Workspace and change the Drive to where your data is located. Click on the folder name to select it and then click Use this folder in the upper right corner of the pop-up window.  Once you have deployed your data, you are ready to launch the application. Click on Submit to the right of the screen and then click Open interface in the upper right corner of the following page to start using the Proteomics Sandbox application.  </p> <p>Congratulations! You're now ready to dive into the world of clinical proteomics and perform various analyses with the user-friendly Proteomics Sandbox app. For more detailed instructions on how to use the software available in the app, check out the official documentation for the software linked in the overview table. </p>"},{"location":"rmd/modify_md.html","title":"Modify md","text":"In\u00a0[33]: Copied! <pre>import os\nimport shutil\nimport re\n</pre> import os import shutil import re In\u00a0[35]: Copied! <pre>source_folder = \"./knit/\"\nimages_folder = \"./images/\"\ndestination_folder = \"../\"\nfiles = os.listdir(source_folder)\n\nprint(files)\n</pre> source_folder = \"./knit/\" images_folder = \"./images/\" destination_folder = \"../\" files = os.listdir(source_folder)  print(files) <pre>['rmarkdown_example.md']\n</pre> In\u00a0[36]: Copied! <pre>for i in files:\n    if i.endswith(\".md\"):\n        with open(source_folder + i) as f:\n            print(\"Processing:\", i, \"\\n\")\n            text = f.read()\n            text = re.sub(\"\\nknit((.|\\n)*)\\n[0-9]{4}-[0-9]{2}-[0-9]{2}\\n\", \"\\n---\\n\" ,text)\n            text = re.sub(\"(\u201d|\u201c)\",\"\\\"\",text)\n        with open(source_folder + i, \"w\") as f:\n            f.write(text)\n</pre> for i in files:     if i.endswith(\".md\"):         with open(source_folder + i) as f:             print(\"Processing:\", i, \"\\n\")             text = f.read()             text = re.sub(\"\\nknit((.|\\n)*)\\n[0-9]{4}-[0-9]{2}-[0-9]{2}\\n\", \"\\n---\\n\" ,text)             text = re.sub(\"(\u201d|\u201c)\",\"\\\"\",text)         with open(source_folder + i, \"w\") as f:             f.write(text) <pre>Processing: rmarkdown_example.md \n\n</pre> In\u00a0[37]: Copied! <pre>for file_name in os.listdir(source_folder):\n    # construct full file path\n    source = source_folder + file_name\n    destination = destination_folder + file_name\n    shutil.move(source, destination)\n    print('Moved:', file_name)\n</pre> for file_name in os.listdir(source_folder):     # construct full file path     source = source_folder + file_name     destination = destination_folder + file_name     shutil.move(source, destination)     print('Moved:', file_name) <pre>Moved: rmarkdown_example.md\n</pre> In\u00a0[39]: Copied! <pre>def copy_directory(src_dir, dest_dir):\n    if not os.path.exists(dest_dir):\n        os.makedirs(dest_dir)\n    for item in os.listdir(src_dir):\n        src_path = os.path.join(src_dir, item)\n        dest_path = os.path.join(dest_dir, item)\n        if os.path.isdir(src_path):\n            copy_directory(src_path, dest_path)\n        else:\n            shutil.copy2(src_path, dest_path)\n\ncopy_directory(images_folder, destination_folder+\"images/\")\n</pre>  def copy_directory(src_dir, dest_dir):     if not os.path.exists(dest_dir):         os.makedirs(dest_dir)     for item in os.listdir(src_dir):         src_path = os.path.join(src_dir, item)         dest_path = os.path.join(dest_dir, item)         if os.path.isdir(src_path):             copy_directory(src_path, dest_path)         else:             shutil.copy2(src_path, dest_path)  copy_directory(images_folder, destination_folder+\"images/\")"},{"location":"rmd/knit/rmarkdown_example.html","title":"Rmarkdown example","text":""},{"location":"rmd/knit/rmarkdown_example.html#rmarkdown-example","title":"Rmarkdown example","text":"<p>2000-01-01</p>"},{"location":"rmd/knit/rmarkdown_example.html#rmarkdown-example_1","title":"Rmarkdown example","text":"<p>!!! note \u201cSection Overview\u201d</p> <pre><code>&amp;#128368; **Time Estimation:** X minutes\n\n&amp;#128172; **Learning Objectives:**    \n    1. First item  \n    2. Second item\n</code></pre> <p>This is an example of how to make md pages from rmarkdown documents. The source code to generate this md document is in <code>develop/rmd/rmarkdown_example.Rmd</code>.</p> <p>First we need to write the document as usual. Try to use the admonitions as in previous examples.</p>"},{"location":"rmd/knit/rmarkdown_example.html#writing-code","title":"Writing code","text":"<p>You can run code as usual in Rmarkdown. The chunk options can be very useful. By default, the code will not run unless explicity specified in the chunk (you can change this behaviour on the \u201cknitr\u201d chunk above).</p> <pre><code>library(tidyverse)\n</code></pre> <pre><code>ggplot(data = txhousing, aes(x = sales, y = listings)) +\ngeom_point()\n</code></pre> <p></p>"},{"location":"rmd/knit/rmarkdown_example.html#adding-images","title":"Adding images","text":"<p>You can add images using the <code>knitr::include_graphics()</code> option. The images should be in the same folder, otherwise they will break in the step below:</p> <p></p>"},{"location":"rmd/knit/rmarkdown_example.html#knitting-the-document-and-formatting-item","title":"Knitting the document and formatting item","text":"<p>To use this document in the webpage, you will have to knit it first as a github_document. This is already setup in the yaml menu above. The knitted files will be created in the <code>knit</code> folder. Unfortunately, knitting creates a couple of issues. First, we need to get rid of the knit options of the yaml file. Knitting will also create a header with the title, author and date on the newly created md document. Lastly, for some reason, knitting will change the normal quotes \u201c\u201d into cursive quotes \u201c\u201d. This will completely mess up the admonitions, and mkdocs will not display them properly.</p> <p>In order to solve this issues, there is a small <code>modify_md.ipynb</code> file that will take all the created github_document (*.md) files and fix these issues.</p> <pre><code>from os import listdir\nimport re\nfiles = listdir(\"./knit/\")\nprint(files)\n</code></pre> <pre><code>for i in files:\nif i.endswith(\".md\"):\nwith open(\"./knit/\"+ i) as f:\ntext = f.read()\ntext = re.sub(\"\\nknit((.|\\n)*)\\n[0-9]{4}-[0-9]{2}-[0-9]{2}\\n\", \"\\n---\\n\" ,text)\ntext = re.sub(\"(\u201d|\u201c)\",\"\\\"\",text)\nwith open(\"./knit/\"+ i, \"w\") as f:\nf.write(text)\n</code></pre> <p>You can then move the knitted documents (and the images if needed) to the <code>develop</code> folder.</p>"},{"location":"keywords.html","title":"Keywords","text":"<p>Here's a lit of used keywords:</p>"},{"location":"keywords.html#authors","title":"authors","text":"<ul> <li>Contributors</li> </ul>"},{"location":"keywords.html#contributors","title":"contributors","text":"<ul> <li>Contributors</li> </ul>"}]}